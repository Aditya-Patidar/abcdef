{
  "pageModelVersion": "2010.0.0",
  "title": "",
  "description": "",
  "variables": {
    "bidirectionalNavigation": {
      "type": "boolean",
      "defaultValue": false,
      "input": "fromCaller"
    },
    "defaultFields": {
      "type": "string[]",
      "defaultValue": [
        "CustomerId",
        "FirstName",
        "LastName"
      ]
    },
    "displayMode": {
      "type": "string"
    },
    "fodCustomers": {
      "type": "page:getFodCustomersResponse"
    },
    "fodCustomersDetailFormLoadingStatus": {
      "type": "string",
      "defaultValue": "pending"
    },
    "fodCustomersDetailFormRenderedFields": {
      "type": "any[]",
      "onValueChanged": {
        "chains": [
          {
            "chainId": "loadFodCustomersChain",
            "parameters": {
              "fetchedFields": "{{ $page.variables.defaultFields.concat($page.variables.fodCustomersDetailFormRenderedFields) }}",
              "fodCustomersId": "{{ $variables.itemId }}"
            }
          }
        ]
      }
    },
    "inFlowBack": {
      "type": "boolean",
      "defaultValue": false,
      "input": "fromCaller"
    },
    "itemId": {
      "type": "string",
      "required": true,
      "input": "fromUrl",
      "onValueChanged": {
        "chains": [
          {
            "chainId": "getPreviousNextItemsChain",
            "parameters": {}
          },
          {
            "chainId": "loadFodCustomersChain",
            "parameters": {
              "fetchedFields": "[[ $page.variables.fodCustomersDetailFormRenderedFields ]]",
              "fodCustomersId": "{{ $variables.itemId }}"
            }
          }
        ]
      }
    },
    "itemsListSDP": {
      "type": "vb/ServiceDataProvider"
    },
    "nextItem": {
      "type": "any",
      "defaultValue": null
    },
    "orderListSDP": {
      "type": "vb/ServiceDataProvider",
      "defaultValue": {
        "endpoint": "fodOrders/getall_fodOrders",
        "responseType": "getall_fodOrders",
        "itemsPath": "items",
        "filterCriterion": {
          "op": "$eq",
          "attribute": "CustomerId",
          "value": "{{ $variables.itemId }}"
        }
      }
    },
    "overviewExpanded": {
      "type": "boolean",
      "defaultValue": false,
      "input": "fromCaller"
    },
    "parentPage": {
      "type": "string",
      "input": "fromCaller"
    },
    "previousItem": {
      "type": "any",
      "defaultValue": null
    }
  },
  "metadata": {
    "fodCustomersGetFodCustomersMetadata": {
      "type": "vb/DynamicLayoutMetadataProviderDescriptor",
      "defaultValue": {
        "endpoint": "fodCustomers/get_fodCustomers"
      }
    }
  },
  "types": {
    "@decorators.getall_fodOrders": {
      "endpoint": "getall_fodOrders",
      "service": "fodOrders",
      "path": "response"
    },
    "@decorators.getFodCustomersResponse": {
      "endpoint": "get_fodCustomers",
      "service": "fodCustomers",
      "path": "response"
    },
    "getall_fodOrders": {
      "items": [
        {
          "CurrencyCode": "string",
          "OrderDate": "string",
          "OrderId": "number",
          "OrderNumber": "string",
          "OrderStatus": "string",
          "TotalAmount": "number"
        }
      ]
    },
    "getFodCustomersResponse": "object"
  },
  "chains": {
    "ExpandOrCollapseOverviewChain": {
      "description": "Expand or collapse overview to full page display",
      "root": "updateExpandVariable",
      "actions": {
        "updateExpandVariable": {
          "module": "vb/action/builtin/navigateToPageAction",
          "parameters": {
            "page": "{{ $application.currentPage.id }}",
            "params": {
              "itemId": "{{ $page.variables.itemId }}",
              "parentPage": "{{ $page.variables.parentPage }}",
              "overviewExpanded": "{{ $chain.variables.expand }}",
              "inFlowBack": "{{ $page.variables.inFlowBack }}",
              "bidirectionalNavigation": "{{ $page.variables.bidirectionalNavigation }}"
            },
            "history": "skip"
          }
        }
      },
      "variables": {
        "expand": {
          "required": true,
          "type": "boolean",
          "input": "fromCaller"
        }
      }
    },
    "getPreviousNextItemsChain": {
      "description": "",
      "root": "getPreviousNext",
      "actions": {
        "getPreviousNext": {
          "module": "vb/action/builtin/callComponentMethodAction",
          "parameters": {
            "component": "{{ document.getElementById('item_overview_page') }}",
            "method": "getPreviousNextItems"
          },
          "outcomes": {
            "success": "assignResults",
            "failure": "fireErrorNotification"
          }
        },
        "assignResults": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.previousItem": {
              "source": "{{ $chain.results.getPreviousNext.previousItem }}"
            },
            "$page.variables.nextItem": {
              "source": "{{ $chain.results.getPreviousNext.nextItem }}"
            }
          }
        },
        "fireErrorNotification": {
          "module": "vb/action/builtin/fireNotificationEventAction",
          "parameters": {
            "summary": "Failed to get previous next item",
            "message": "[[ $chain.results.getPreviousNext.error + ' / ' + $chain.results.getPreviousNext.message.summary ]]",
            "type": "error",
            "displayMode": "persist"
          },
          "outcomes": {},
          "description": "Shows an error message informing about fail to get previous next item.",
          "label": "Show error message"
        }
      }
    },
    "goToParentChain": {
      "root": "navigateToParentPage",
      "description": "Go to parent page",
      "actions": {
        "navigateToParentPage": {
          "module": "vb/action/builtin/navigateToPageAction",
          "parameters": {
            "page": "{{ $chain.variables.parentPage }}"
          }
        }
      },
      "variables": {
        "parentPage": {
          "type": "string",
          "required": true,
          "input": "fromCaller"
        }
      }
    },
    "GoToPreviousOrNextChain": {
      "description": "",
      "root": "ifItemKnown",
      "actions": {
        "ifItemKnown": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "[[ $chain.variables.goNext && $page.variables.nextItem && $page.variables.nextItem.id || (!$chain.variables.goNext && $page.variables.previousItem && $page.variables.previousItem.id )]]"
          },
          "outcomes": {
            "true": "navigateToItem",
            "false": "getItemId"
          }
        },
        "getItemId": {
          "module": "vb/action/builtin/callChainAction",
          "parameters": {
            "id": "getPreviousNextItemsChain"
          },
          "outcomes": {
            "success": "navigateToItem"
          }
        },
        "navigateToItem": {
          "module": "vb/action/builtin/navigateToPageAction",
          "parameters": {
            "page": "{{ $application.currentPage.id }}",
            "params": {
              "itemId": "{{ $chain.variables.goNext ? $page.variables.nextItem.id : $page.variables.previousItem.id }}",
              "parentPage": "{{ $page.variables.parentPage }}",
              "overviewExpanded": false,
              "inFlowBack": "{{ $page.variables.inFlowBack }}",
              "bidirectionalNavigation": "{{ $page.variables.bidirectionalNavigation }}"
            }
          }
        }
      },
      "variables": {
        "goNext": {
          "required": true,
          "type": "boolean",
          "input": "fromCaller"
        }
      }
    },
    "loadFodCustomersChain": {
      "root": "setPendingFormStatus",
      "description": "Loads fodCustomers record data",
      "variables": {
        "fetchedFields": {
          "type": "any[]",
          "input": "fromCaller"
        },
        "fodCustomersId": {
          "type": "string",
          "input": "fromCaller"
        }
      },
      "actions": {
        "setPendingFormStatus": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.fodCustomersDetailFormLoadingStatus": {
              "source": "pending"
            }
          },
          "outcomes": {
            "success": "resetFodCustomersData"
          },
          "description": "Updates status of the form to Pending.",
          "label": "Set Form status to Pending"
        },
        "resetFodCustomersData": {
          "module": "vb/action/builtin/resetVariablesAction",
          "parameters": {
            "variables": [
              "$page.variables.fodCustomers"
            ]
          },
          "outcomes": {
            "success": "testValidInput"
          },
          "description": "Clears fodCustomers data the variable holds",
          "label": "Reset fodCustomers variable"
        },
        "testValidInput": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "[[ $chain.variables.fetchedFields && $chain.variables.fetchedFields.length && $chain.variables.fodCustomersId !== undefined ]]"
          },
          "outcomes": {
            "true": "loadFodCustomers"
          },
          "description": "Tests the REST call can be initiated",
          "label": "Test valid input"
        },
        "loadFodCustomers": {
          "module": "vb/action/builtin/restAction",
          "parameters": {
            "endpoint": "fodCustomers/get_fodCustomers",
            "responseFields": "[[ $chain.variables.fetchedFields ]]",
            "uriParams": {
              "fodCustomers_Id": "[[ $chain.variables.fodCustomersId ]]"
            }
          },
          "outcomes": {
            "success": "assignFodCustomersData",
            "failure": "fireErrorNotification"
          },
          "description": "Initiates REST call loading fodCustomers data",
          "label": "Load fodCustomers record"
        },
        "assignFodCustomersData": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.fodCustomers": {
              "source": "{{ $chain.results.loadFodCustomers.body }}",
              "auto": "always"
            }
          },
          "outcomes": {
            "success": "setReadyFormStatus"
          },
          "description": "Assigns data loaded by the REST call to the fodCustomers variable",
          "label": "Assign fodCustomers data"
        },
        "setReadyFormStatus": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.fodCustomersDetailFormLoadingStatus": {
              "source": "ready"
            }
          }
        },
        "fireErrorNotification": {
          "module": "vb/action/builtin/fireNotificationEventAction",
          "parameters": {
            "summary": "Could not load data",
            "message": "[[ 'Could not load data: status ' + $chain.results.loadFodCustomers.payload.status ]]",
            "type": "error",
            "displayMode": "persist"
          },
          "description": "Shows an error message informing about data load failure",
          "label": "Show error message"
        }
      }
    }
  },
  "eventListeners": {
    "ojSpGoToParent": {
      "chains": [
        {
          "chainId": "goToParentChain",
          "parameters": {
            "parentPage": "{{ $page.variables.parentPage }}"
          }
        }
      ]
    },
    "ojSpItemOverviewPageSpNext": {
      "chains": [
        {
          "chainId": "GoToPreviousOrNextChain",
          "parameters": {
            "goNext": "true"
          }
        }
      ]
    },
    "ojSpItemOverviewPageSpPrevious": {
      "chains": [
        {
          "chainId": "GoToPreviousOrNextChain",
          "parameters": {
            "goNext": "false"
          }
        }
      ]
    },
    "ojSpItemOverviewSpCollapse": {
      "chains": [
        {
          "chainId": "ExpandOrCollapseOverviewChain",
          "parameters": {
            "expand": "false"
          }
        }
      ]
    },
    "ojSpItemOverviewSpExpand": {
      "chains": [
        {
          "chainId": "ExpandOrCollapseOverviewChain",
          "parameters": {
            "expand": "true"
          }
        }
      ]
    },
    "vbEnter": {
      "chains": [
        {
          "chainId": "getPreviousNextItemsChain",
          "parameters": {}
        }
      ]
    }
  },
  "imports": {
    "components": {
      "oj-dynamic-form": {
        "path": "oj-dynamic/form/loader"
      },
      "oj-list-view": {
        "path": "ojs/ojlistview"
      },
      "oj-sp-item-overview": {
        "path": "oj-sp/item-overview/loader"
      },
      "oj-sp-item-overview-page": {
        "path": "oj-sp/item-overview-page/loader"
      },
      "oj-sp-list-item-template": {
        "path": "oj-sp/list-item-template/loader"
      }
    }
  }
}